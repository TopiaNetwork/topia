// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: message_sync.proto

package sync

import (
	fmt "fmt"
	proto1 "github.com/TopiaNetwork/topia/common/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SyncMessage_SyncMessageType int32

const (
	SyncMessage_Unknown        SyncMessage_SyncMessageType = 0
	SyncMessage_BlockRequest   SyncMessage_SyncMessageType = 1
	SyncMessage_BlockResponse  SyncMessage_SyncMessageType = 2
	SyncMessage_StatusRequest  SyncMessage_SyncMessageType = 3
	SyncMessage_StatusResponse SyncMessage_SyncMessageType = 4
)

var SyncMessage_SyncMessageType_name = map[int32]string{
	0: "Unknown",
	1: "BlockRequest",
	2: "BlockResponse",
	3: "StatusRequest",
	4: "StatusResponse",
}

var SyncMessage_SyncMessageType_value = map[string]int32{
	"Unknown":        0,
	"BlockRequest":   1,
	"BlockResponse":  2,
	"StatusRequest":  3,
	"StatusResponse": 4,
}

func (x SyncMessage_SyncMessageType) String() string {
	return proto.EnumName(SyncMessage_SyncMessageType_name, int32(x))
}

func (SyncMessage_SyncMessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_99ae8e2747a15fbd, []int{0, 0}
}

type BlockResponse_RespCode int32

const (
	BlockResponse_OK      BlockResponse_RespCode = 0
	BlockResponse_NOBLOCK BlockResponse_RespCode = 1
)

var BlockResponse_RespCode_name = map[int32]string{
	0: "OK",
	1: "NOBLOCK",
}

var BlockResponse_RespCode_value = map[string]int32{
	"OK":      0,
	"NOBLOCK": 1,
}

func (x BlockResponse_RespCode) String() string {
	return proto.EnumName(BlockResponse_RespCode_name, int32(x))
}

func (BlockResponse_RespCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_99ae8e2747a15fbd, []int{2, 0}
}

type SyncMessage struct {
	MsgType SyncMessage_SyncMessageType `protobuf:"varint,1,opt,name=MsgType,proto3,enum=proto.SyncMessage_SyncMessageType" json:"msgType"`
	Data    []byte                      `protobuf:"bytes,2,opt,name=Data,proto3" json:"data"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *SyncMessage) Reset()         { *m = SyncMessage{} }
func (m *SyncMessage) String() string { return proto.CompactTextString(m) }
func (*SyncMessage) ProtoMessage()    {}
func (*SyncMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_99ae8e2747a15fbd, []int{0}
}
func (m *SyncMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *SyncMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncMessage.Merge(m, src)
}
func (m *SyncMessage) XXX_Size() int {
	return m.Size()
}
func (m *SyncMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SyncMessage proto.InternalMessageInfo

func (m *SyncMessage) GetMsgType() SyncMessage_SyncMessageType {
	if m != nil {
		return m.MsgType
	}
	return SyncMessage_Unknown
}

func (m *SyncMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type BlockRequest struct {
	Height               uint64   `protobuf:"varint,1,opt,name=Height,proto3" json:"height"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockRequest) Reset()         { *m = BlockRequest{} }
func (m *BlockRequest) String() string { return proto.CompactTextString(m) }
func (*BlockRequest) ProtoMessage()    {}
func (*BlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99ae8e2747a15fbd, []int{1}
}
func (m *BlockRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *BlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRequest.Merge(m, src)
}
func (m *BlockRequest) XXX_Size() int {
	return m.Size()
}
func (m *BlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlockRequest proto.InternalMessageInfo

func (m *BlockRequest) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

type BlockResponse struct {
	Height uint64                 `protobuf:"varint,1,opt,name=Height,proto3" json:"height"`
	Code   BlockResponse_RespCode `protobuf:"varint,2,opt,name=Code,proto3,enum=proto.BlockResponse_RespCode" json:"code"`
	Block  *proto1.Block          `protobuf:"bytes,3,opt,name=block,proto3" json:"block"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *BlockResponse) Reset()         { *m = BlockResponse{} }
func (m *BlockResponse) String() string { return proto.CompactTextString(m) }
func (*BlockResponse) ProtoMessage()    {}
func (*BlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_99ae8e2747a15fbd, []int{2}
}
func (m *BlockResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *BlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockResponse.Merge(m, src)
}
func (m *BlockResponse) XXX_Size() int {
	return m.Size()
}
func (m *BlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockResponse proto.InternalMessageInfo

func (m *BlockResponse) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BlockResponse) GetCode() BlockResponse_RespCode {
	if m != nil {
		return m.Code
	}
	return BlockResponse_OK
}

func (m *BlockResponse) GetBlock() *proto1.Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type StatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusRequest) Reset()         { *m = StatusRequest{} }
func (m *StatusRequest) String() string { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()    {}
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99ae8e2747a15fbd, []int{3}
}
func (m *StatusRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *StatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusRequest.Merge(m, src)
}
func (m *StatusRequest) XXX_Size() int {
	return m.Size()
}
func (m *StatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatusRequest proto.InternalMessageInfo

type StatusResponse struct {
	HeightHighest        uint64   `protobuf:"varint,1,opt,name=HeightHighest,proto3" json:"heightHighest"`
	HeightLowest         uint64   `protobuf:"varint,2,opt,name=HeightLowest,proto3" json:"heightLowest"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_99ae8e2747a15fbd, []int{4}
}
func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	b = b[:cap(b)]
	n, err := m.MarshalToSizedBuffer(b)
	if err != nil {
		return nil, err
	}
	return b[:n], nil
}
func (m *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(m, src)
}
func (m *StatusResponse) XXX_Size() int {
	return m.Size()
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

func (m *StatusResponse) GetHeightHighest() uint64 {
	if m != nil {
		return m.HeightHighest
	}
	return 0
}

func (m *StatusResponse) GetHeightLowest() uint64 {
	if m != nil {
		return m.HeightLowest
	}
	return 0
}

func init() {
	proto.RegisterEnum("proto.SyncMessage_SyncMessageType", SyncMessage_SyncMessageType_name, SyncMessage_SyncMessageType_value)
	proto.RegisterEnum("proto.BlockResponse_RespCode", BlockResponse_RespCode_name, BlockResponse_RespCode_value)
	proto.RegisterType((*SyncMessage)(nil), "proto.SyncMessage")
	proto.RegisterType((*BlockRequest)(nil), "proto.BlockRequest")
	proto.RegisterType((*BlockResponse)(nil), "proto.BlockResponse")
	proto.RegisterType((*StatusRequest)(nil), "proto.StatusRequest")
	proto.RegisterType((*StatusResponse)(nil), "proto.StatusResponse")
}

func init() { proto.RegisterFile("message_sync.proto", fileDescriptor_99ae8e2747a15fbd) }

var fileDescriptor_99ae8e2747a15fbd = []byte{
	// 426 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x31, 0x6f, 0xd3, 0x40,
	0x1c, 0xc5, 0x73, 0xa9, 0x9b, 0x94, 0x7f, 0x9c, 0xd4, 0xbd, 0x29, 0x8a, 0xc0, 0x8e, 0x6e, 0xca,
	0x42, 0x22, 0x05, 0x24, 0x06, 0x36, 0x97, 0xa1, 0xa8, 0x2d, 0x91, 0xae, 0xb0, 0xb0, 0x20, 0xd7,
	0x39, 0xd9, 0xa5, 0xd8, 0x67, 0xb8, 0xab, 0x22, 0x4f, 0x7c, 0x0d, 0x3e, 0x0e, 0x23, 0x23, 0x23,
	0x93, 0x85, 0xcc, 0xe6, 0x4f, 0x81, 0xee, 0xce, 0x96, 0x6c, 0x4f, 0x9d, 0xee, 0xf4, 0xfb, 0xbf,
	0xf7, 0x72, 0xff, 0x17, 0x03, 0x4e, 0x98, 0x10, 0x41, 0xc4, 0x3e, 0x89, 0x3c, 0x0d, 0xd7, 0xd9,
	0x37, 0x2e, 0x39, 0x3e, 0xd6, 0xc7, 0x02, 0x22, 0x1e, 0x71, 0x83, 0x16, 0x6e, 0xc8, 0x93, 0x84,
	0xa7, 0x1b, 0x99, 0x67, 0x4c, 0x6c, 0x34, 0xdb, 0xdc, 0x7e, 0xe1, 0xe1, 0xbd, 0x99, 0x93, 0x12,
	0xc1, 0xe4, 0x26, 0x4f, 0xc3, 0x6b, 0x93, 0x86, 0xdf, 0xc2, 0xf8, 0x5a, 0x44, 0xef, 0xf3, 0x8c,
	0xcd, 0xd1, 0x12, 0xad, 0x66, 0x5b, 0x62, 0x84, 0xeb, 0x96, 0xa8, 0x7d, 0x57, 0x4a, 0x7f, 0x52,
	0x15, 0xde, 0x38, 0x31, 0x36, 0xda, 0xf8, 0xf1, 0x53, 0xb0, 0xde, 0x04, 0x32, 0x98, 0x0f, 0x97,
	0x68, 0x65, 0xfb, 0x27, 0x55, 0xe1, 0x59, 0xfb, 0x40, 0x06, 0x54, 0x53, 0xf2, 0x19, 0x4e, 0x7b,
	0x31, 0x78, 0x02, 0xe3, 0x0f, 0xe9, 0x7d, 0xca, 0x0f, 0xa9, 0x33, 0xc0, 0x0e, 0xd8, 0xbe, 0x7a,
	0x27, 0x65, 0x5f, 0x1f, 0x98, 0x90, 0x0e, 0xc2, 0x67, 0x30, 0xad, 0x89, 0xc8, 0x78, 0x2a, 0x98,
	0x33, 0x54, 0xe8, 0x46, 0x06, 0xf2, 0x41, 0x34, 0xaa, 0x23, 0x8c, 0x61, 0xd6, 0xa0, 0x5a, 0x66,
	0x91, 0x6d, 0x37, 0x0b, 0x13, 0x18, 0x5d, 0xb0, 0xbb, 0x28, 0x96, 0x7a, 0x47, 0xcb, 0x87, 0xaa,
	0xf0, 0x46, 0xb1, 0x26, 0xb4, 0x9e, 0x90, 0x9f, 0xa8, 0xf7, 0x73, 0x8f, 0x71, 0xe1, 0xd7, 0x60,
	0x9d, 0xf3, 0x3d, 0xd3, 0x3b, 0xcf, 0xb6, 0xcf, 0xea, 0xee, 0x3a, 0x39, 0x6b, 0x75, 0x51, 0x22,
	0x53, 0x49, 0xc8, 0xf7, 0x8c, 0x6a, 0x13, 0x7e, 0x0e, 0xc7, 0xfa, 0xaf, 0x99, 0x1f, 0x2d, 0xd1,
	0x6a, 0xb2, 0xb5, 0xdb, 0x6e, 0xff, 0x49, 0x55, 0x78, 0x66, 0x4c, 0xcd, 0x41, 0x3c, 0x38, 0x69,
	0xa2, 0xf0, 0x08, 0x86, 0xbb, 0x4b, 0x67, 0xa0, 0x2a, 0x7c, 0xb7, 0xf3, 0xaf, 0x76, 0xe7, 0x97,
	0x0e, 0x22, 0xa7, 0xbd, 0x76, 0xc8, 0xf7, 0x7e, 0x37, 0xf8, 0x15, 0x4c, 0xcd, 0xcb, 0x2f, 0xee,
	0xa2, 0x98, 0x89, 0x66, 0xb5, 0xb3, 0xaa, 0xf0, 0xa6, 0x71, 0x7b, 0x40, 0xbb, 0x3a, 0xfc, 0x12,
	0x6c, 0x03, 0xae, 0xf8, 0x41, 0xf9, 0x86, 0xda, 0xe7, 0x54, 0x85, 0x67, 0xc7, 0x2d, 0x4e, 0x3b,
	0x2a, 0x7f, 0xf1, 0xab, 0x74, 0xd1, 0xef, 0xd2, 0x45, 0x7f, 0x4a, 0x17, 0xfd, 0x2d, 0x5d, 0xf4,
	0xe3, 0x9f, 0x3b, 0xf8, 0x68, 0xa9, 0x4f, 0xf8, 0x76, 0xa4, 0xb7, 0x7d, 0xf1, 0x3f, 0x00, 0x00,
	0xff, 0xff, 0x02, 0x2f, 0xb0, 0x0d, 0xd9, 0x02, 0x00, 0x00,
}

func (m *SyncMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintMessageSync(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x12
	}
	if m.MsgType != 0 {
		i = encodeVarintMessageSync(dAtA, i, uint64(m.MsgType))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *BlockRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BlockRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BlockRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Height != 0 {
		i = encodeVarintMessageSync(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *BlockResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BlockResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BlockResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Block != nil {
		{
			size, err := m.Block.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMessageSync(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Code != 0 {
		i = encodeVarintMessageSync(dAtA, i, uint64(m.Code))
		i--
		dAtA[i] = 0x10
	}
	if m.Height != 0 {
		i = encodeVarintMessageSync(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *StatusRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatusRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatusRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *StatusResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StatusResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StatusResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.HeightLowest != 0 {
		i = encodeVarintMessageSync(dAtA, i, uint64(m.HeightLowest))
		i--
		dAtA[i] = 0x10
	}
	if m.HeightHighest != 0 {
		i = encodeVarintMessageSync(dAtA, i, uint64(m.HeightHighest))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintMessageSync(dAtA []byte, offset int, v uint64) int {
	offset -= sovMessageSync(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SyncMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MsgType != 0 {
		n += 1 + sovMessageSync(uint64(m.MsgType))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovMessageSync(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BlockRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Height != 0 {
		n += 1 + sovMessageSync(uint64(m.Height))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BlockResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Height != 0 {
		n += 1 + sovMessageSync(uint64(m.Height))
	}
	if m.Code != 0 {
		n += 1 + sovMessageSync(uint64(m.Code))
	}
	if m.Block != nil {
		l = m.Block.Size()
		n += 1 + l + sovMessageSync(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StatusRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StatusResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HeightHighest != 0 {
		n += 1 + sovMessageSync(uint64(m.HeightHighest))
	}
	if m.HeightLowest != 0 {
		n += 1 + sovMessageSync(uint64(m.HeightLowest))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovMessageSync(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMessageSync(x uint64) (n int) {
	return sovMessageSync(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SyncMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessageSync
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MsgType", wireType)
			}
			m.MsgType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageSync
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MsgType |= SyncMessage_SyncMessageType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageSync
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMessageSync
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMessageSync
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessageSync(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessageSync
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BlockRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessageSync
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BlockRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BlockRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageSync
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMessageSync(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessageSync
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BlockResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessageSync
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BlockResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BlockResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageSync
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Code", wireType)
			}
			m.Code = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageSync
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Code |= BlockResponse_RespCode(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Block", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageSync
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessageSync
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessageSync
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Block == nil {
				m.Block = &proto1.Block{}
			}
			if err := m.Block.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessageSync(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessageSync
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatusRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessageSync
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatusRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatusRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMessageSync(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessageSync
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StatusResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessageSync
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StatusResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StatusResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeightHighest", wireType)
			}
			m.HeightHighest = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageSync
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HeightHighest |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeightLowest", wireType)
			}
			m.HeightLowest = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessageSync
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HeightLowest |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMessageSync(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessageSync
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMessageSync(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMessageSync
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessageSync
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessageSync
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMessageSync
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMessageSync
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMessageSync
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMessageSync        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMessageSync          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMessageSync = fmt.Errorf("proto: unexpected end of group")
)
