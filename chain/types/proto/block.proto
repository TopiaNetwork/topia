syntax = "proto3";

package proto;

option go_package = "types";
option (gogoproto.stable_marshaler_all) = true;

import "gogo.proto";

//protoc --proto_path=$GOPATH/pkg/mod/github.com/gogo/protobuf@v1.3.2/gogoproto --proto_path=.  --gofast_out=. ./block.proto

message BlockHead {
  bytes  ChainID           = 1  [(gogoproto.jsontag) = "chainID"];
  uint32 Version           = 2  [(gogoproto.jsontag) = "version"];
  uint64 Height            = 3  [(gogoproto.jsontag) = "height"];
  uint64 Epoch             = 4  [(gogoproto.jsontag) = "epoch"];
  uint64 Round             = 5  [(gogoproto.jsontag) = "round"];
  bytes  ParentBlockHash   = 6  [(gogoproto.jsontag) = "parentBlockHash"];
  bytes  Launcher          = 7  [(gogoproto.jsontag) = "launcher"];
  bytes  Proposer          = 8  [(gogoproto.jsontag) = "proposer"];
  bytes  Proof             = 9  [(gogoproto.jsontag) = "proof"];
  bytes  VRFProof          = 10 [(gogoproto.jsontag) = "vrfProof"];
  bytes  MaxPri            = 11 [(gogoproto.jsontag) = "maxPri"];
  bytes  VoteAggSignature  = 12 [(gogoproto.jsontag) = "voteAggSignature"];
  uint32 TxCount           = 13 [(gogoproto.jsontag) = "txCount"];
  bytes  TxRoot            = 14 [(gogoproto.jsontag) = "txRoot"];
  bytes  TxResultRoot      = 15 [(gogoproto.jsontag) = "txResultHash"];
  bytes  StateRoot         = 16 [(gogoproto.jsontag) = "txResultHash"];
  bytes  GasFees           = 17 [(gogoproto.jsontag) = "gasFees"];
  uint64 TimeStamp         = 18 [(gogoproto.jsontag) = "timeStamp"];
  uint64 ElapsedSpan       = 19 [(gogoproto.jsontag) = "elaspedSpan"]; //unit ms
  bytes  Hash              = 20 [(gogoproto.jsontag) = "hash"];
  bytes  Reserved          = 21 [(gogoproto.jsontag) = "reserved"];
}

message BlockData {
  uint32 Version           = 1  [(gogoproto.jsontag) = "version"];
  repeated bytes Txs       = 2  [(gogoproto.jsontag) = "txs"];
}

message Block {
  BlockHead Head = 1  [(gogoproto.jsontag) = "head"];
  BlockData Data = 2  [(gogoproto.jsontag) = "data"];
}

message BlockResultHead {
  uint32 Version           = 1  [(gogoproto.jsontag) = "version"];
  bytes  PrevBlockResult   = 2  [(gogoproto.jsontag) = "prevBlockResult"];
  bytes  BlockHash         = 3  [(gogoproto.jsontag) = "blockHash"];
  bytes  TxResultHashRoot  = 4  [(gogoproto.jsontag) = "txResultHashRoot"];
  enum ResultStatus {
    OK = 0;
    Err = 1;
  }
  ResultStatus Status    = 5  [(gogoproto.jsontag) = "status"];
  bytes ErrMsg           = 6  [(gogoproto.jsontag) = "errMsg"];
  bytes Reserved         = 7  [(gogoproto.jsontag) = "reserved"];
}

message BlockResultData {
  uint32 Version           = 1  [(gogoproto.jsontag) = "version"];
  repeated bytes TxResults = 2  [(gogoproto.jsontag) = "txResults"];
}

message BlockResult {
  BlockResultHead Head = 1  [(gogoproto.jsontag) = "head"];
  BlockResultData Data = 2  [(gogoproto.jsontag) = "data"];
}

message PubSubMessageBlockInfo {
  bytes Block       = 1  [(gogoproto.jsontag) = "block"];
  bytes BlockResult = 2  [(gogoproto.jsontag) = "blockResult"];
}
