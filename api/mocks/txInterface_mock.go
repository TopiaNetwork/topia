// Code generated by MockGen. DO NOT EDIT.
// Source: txInterface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	basic "github.com/TopiaNetwork/topia/transaction/basic"
	gomock "github.com/golang/mock/gomock"
)

// MockTxInterface is a mock of TxInterface interface.
type MockTxInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTxInterfaceMockRecorder
}

// MockTxInterfaceMockRecorder is the mock recorder for MockTxInterface.
type MockTxInterfaceMockRecorder struct {
	mock *MockTxInterface
}

// NewMockTxInterface creates a new mock instance.
func NewMockTxInterface(ctrl *gomock.Controller) *MockTxInterface {
	mock := &MockTxInterface{ctrl: ctrl}
	mock.recorder = &MockTxInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTxInterface) EXPECT() *MockTxInterfaceMockRecorder {
	return m.recorder
}

// SendTransaction mocks base method.
func (m *MockTxInterface) SendTransaction(ctx context.Context, tran *basic.Transaction) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendTransaction", ctx, tran)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendTransaction indicates an expected call of SendTransaction.
func (mr *MockTxInterfaceMockRecorder) SendTransaction(ctx, tran interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendTransaction", reflect.TypeOf((*MockTxInterface)(nil).SendTransaction), ctx, tran)
}

// TransactionByID mocks base method.
func (m *MockTxInterface) TransactionByID(ctx context.Context, txHash basic.TxID) (*basic.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TransactionByID", ctx, txHash)
	ret0, _ := ret[0].(*basic.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TransactionByID indicates an expected call of TransactionByID.
func (mr *MockTxInterfaceMockRecorder) TransactionByID(ctx, txHash interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TransactionByID", reflect.TypeOf((*MockTxInterface)(nil).TransactionByID), ctx, txHash)
}
