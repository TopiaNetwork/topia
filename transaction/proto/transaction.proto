syntax = "proto3";

package proto;

option go_package = "transaction";
option (gogoproto.stable_marshaler_all) = true;

import "gogo.proto";

//protoc --proto_path=$GOPATH/pkg/mod/github.com/gogo/protobuf@v1.3.2/gogoproto --proto_path=.  --gofast_out=. ./transaction.proto

message Transaction {
  bytes    ChainID            = 1  [(gogoproto.jsontag) = "chainID"];
  uint32   Version            = 2  [(gogoproto.jsontag) = "version"];
  bytes    FromAddr           = 3  [(gogoproto.jsontag) = "fromAddr"];
  bytes    TargetAddr         = 4  [(gogoproto.jsontag) = "targetAddr"];
  bytes    FeePayer           = 5  [(gogoproto.jsontag) = "feePayer,omitempty"];
  uint64   Nonce              = 6  [(gogoproto.jsontag) = "nonce"];
  uint64   GasPrice           = 7  [(gogoproto.jsontag) = "gasPrice,omitempty"];
  uint64   GasLimit           = 8  [(gogoproto.jsontag) = "gasLimit,omitempty"];
  uint32   Type               = 9  [(gogoproto.jsontag) = "type"];
  bytes    Data               = 10  [(gogoproto.jsontag) = "data,omitempty"];
  bytes    Signature          = 11  [(gogoproto.jsontag) = "signature,omitempty"];
  bytes    FeePayerSignature  = 12  [(gogoproto.jsontag) = "feePayerSignature,omitempty"];
  uint32   Options            = 13 [(gogoproto.jsontag) = "options,omitempty"];
}

message TransactionResult {
  bytes  TxHash       = 1  [(gogoproto.jsontag) = "txHash"];
  uint64 GasUsed      = 2  [(gogoproto.jsontag) = "gasUsed"];
  bytes  ErrString    = 3  [(gogoproto.jsontag) = "errString"];
  enum ResultStatus {
    OK = 0;
    Err = 1;
  }
  ResultStatus Status = 4 [(gogoproto.jsontag) = "status"];
}